/**
 * @param {pseudo-class} $state - [active, focus, invalid]
 */
@mixin txt-input-palette($state) {
	$palette: map-get($txt-input-palette, $state);
	border: 0.1rem solid map-get($palette, border);
	background-color: map-get($palette, bg);
	color: map-get($palette, txt);
}

@mixin txt-input-palette($palettes) {
	@each $state, $palette in $palettes {
		&:#{$state} {
			border: 0.1rem solid map-get($palette, border);
			background-color: map-get($palette, bg);
			color: map-get($palette, txt);
		}
	}
}

@mixin mobile-only {
	@media screen and (max-width: map-get($breakpoints, mobile)) {
		@content;
	}
}

.proj-grid {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	@include mobile-only {
		grid-template-columns: 1fr;
	}
}

///////////

@mixin text($size, $lineHeight, $weight) {
	font-size: $size;
	line-height: $lineHeight;
	font-weight: $weight;
}

// .MyComponent {
//   @include text(18px, 27px, 500);
// }

@mixin text($size: null, $lineHeight: null, $weight: null) {
	@if $size != null {
		font-size: $size;
	}

	@if $lineHeight != null {
		line-height: $lineHeight;
	}

	@if $weight != null {
		font-weight: $weight;
	}
}

/**
 * @return {selector} - visually hidden
 */
@mixin visually-hidden() {
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
	clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
	clip: rect(1px, 1px, 1px, 1px);
	white-space: nowrap; /* added line */
}
